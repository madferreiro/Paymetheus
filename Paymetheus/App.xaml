<Application x:Class="Paymetheus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Paymetheus"
             xmlns:w="clr-namespace:Paymetheus.Decred.Wallet;assembly=Paymetheus.Bitcoin"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        <SolidColorBrush x:Key="ColorDarkBlueFull" Color="#FF132F4B"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonWhite" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Height="32">
                            <Rectangle x:Name="rectangle" Fill="#FFF4F4F5" HorizontalAlignment="Stretch" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" OverridesDefaultStyle="False">
                                <Rectangle.Effect>
                                    <DropShadowEffect Opacity="0.25" Direction="-90" BlurRadius="2" ShadowDepth="2"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="20,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Height="16" TextAlignment="Center" Foreground="#FF132F4B"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Effect" TargetName="rectangle">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="7" Direction="-90" Opacity="0.25" ShadowDepth="7"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Effect" TargetName="rectangle">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="0" Direction="-90" Opacity="0.25" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" TargetName="textBlock" Value="#FFB2B2B2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ColorKeyBlue" Color="#FF2970FF"/>

        <Style x:Key="ButtonBlue" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Height="32">
                            <Rectangle x:Name="rectangle" Fill="#FF2970FF" HorizontalAlignment="Stretch" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" OverridesDefaultStyle="False">
                                <Rectangle.Effect>
                                    <DropShadowEffect Opacity="0.25" Direction="-90" BlurRadius="2" ShadowDepth="2"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="20,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Height="16" TextAlignment="Center" Foreground="White"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Effect" TargetName="rectangle">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="7" Direction="-90" Opacity="0.25" ShadowDepth="7"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Effect" TargetName="rectangle">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="0" Direction="-90" Opacity="0.25" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" TargetName="textBlock" Value="#FFB2B2B2"/>
                                <Setter Property="Fill" TargetName="rectangle" Value="#FF8997A5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HyperLinkButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Fill="Transparent" HorizontalAlignment="Stretch" RadiusY="0" RadiusX="0" VerticalAlignment="Stretch"/>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Height="21.226" Margin="0,4,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Top" Width="Auto" TextAlignment="Center" TextDecorations="Underline"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="textBlock" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="alternatingListViewBackgrounds" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#F5F5F5"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="11"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="ellipse">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse1">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFA9B4BF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFA9B4BF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="ellipse1" HorizontalAlignment="Left" Height="10" Margin="0.125,2.125,0,0" VerticalAlignment="Top" Width="10" Stroke="#FF2970FF" Grid.ColumnSpan="1"/>
                            <Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="6" Margin="2.125,3.875,0,0" VerticalAlignment="Top" Width="6" Stroke="{x:Null}" Fill="#FF2970FF"/>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Height="13.75" Margin="3.188,-0.334,0,-0.666" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Top" Width="Auto" TextAlignment="Center" Grid.Column="1" Foreground="White"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true"/>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="buttonTemplate">
            <Button Content="{Binding ButtonLabel}" Command="{Binding}" Margin="6 2" Padding="10 2"/>
        </DataTemplate>
    </Application.Resources>
</Application>
